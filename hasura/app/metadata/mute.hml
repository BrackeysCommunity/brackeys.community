---
kind: ObjectType
version: v1
definition:
  name: mute
  fields:
    - name: expires_at
      type: timestamp
    - name: guild_id
      type: int64!
    - name: user_id
      type: int64!
  graphql:
    typeName: mute
    inputTypeName: mute_input
  dataConnectorTypeMapping:
    - dataConnectorName: hammer
      dataConnectorObjectType: Mute
      fieldMapping:
        expires_at:
          column:
            name: ExpiresAt
        guild_id:
          column:
            name: GuildId
        user_id:
          column:
            name: UserId

---
kind: TypePermissions
version: v1
definition:
  typeName: mute
  permissions:
    - role: admin
      output:
        allowedFields:
          - expires_at
          - guild_id
          - user_id

---
kind: BooleanExpressionType
version: v1
definition:
  name: mute_bool_exp
  operand:
    object:
      type: mute
      comparableFields:
        - fieldName: expires_at
          booleanExpressionType: timestamp_bool_exp
        - fieldName: guild_id
          booleanExpressionType: int64_bool_exp
        - fieldName: user_id
          booleanExpressionType: int64_bool_exp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: mute_bool_exp

---
kind: AggregateExpression
version: v1
definition:
  name: mute_agg_exp
  operand:
    object:
      aggregatedType: mute
      aggregatableFields:
        - fieldName: expires_at
          aggregateExpression: timestamp_agg_exp
        - fieldName: guild_id
          aggregateExpression: int64_agg_exp
        - fieldName: user_id
          aggregateExpression: int64_agg_exp
  count:
    enable: true
  graphql:
    selectTypeName: mute_agg_exp

---
kind: OrderByExpression
version: v1
definition:
  name: mute_order_by_exp
  operand:
    object:
      orderedType: mute
      orderableFields:
        - fieldName: expires_at
          orderByExpression: timestamp_order_by_exp
        - fieldName: guild_id
          orderByExpression: int64_order_by_exp
        - fieldName: user_id
          orderByExpression: int64_order_by_exp
      orderableRelationships: []
  graphql:
    expressionTypeName: mute_order_by_exp

---
kind: Model
version: v2
definition:
  name: mute
  objectType: mute
  source:
    dataConnectorName: hammer
    collection: Mute
  filterExpressionType: mute_bool_exp
  aggregateExpression: mute_agg_exp
  orderByExpression: mute_order_by_exp
  graphql:
    selectMany:
      queryRootField: mute
      subscription:
        rootField: mute
    selectUniques:
      - queryRootField: mute_by_mute_pk
        uniqueIdentifier:
          - guild_id
          - user_id
        subscription:
          rootField: mute_by_mute_pk
    filterInputTypeName: mute_filter_input
    aggregate:
      queryRootField: mute_aggregate
      subscription:
        rootField: mute_aggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: mute
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: user_infractions
  sourceType: mute
  target:
    model:
      name: infraction
      subgraph: null
      relationshipType: Array
  mapping:
    - source:
        fieldPath:
          - fieldName: user_id
      target:
        modelField:
          - fieldName: user_id
    - source:
        fieldPath:
          - fieldName: guild_id
      target:
        modelField:
          - fieldName: guild_id
  description: All infractions for the muted user

---
kind: Relationship
version: v1
definition:
  name: user_notes
  sourceType: mute
  target:
    model:
      name: member_note
      subgraph: null
      relationshipType: Array
  mapping:
    - source:
        fieldPath:
          - fieldName: user_id
      target:
        modelField:
          - fieldName: user_id
    - source:
        fieldPath:
          - fieldName: guild_id
      target:
        modelField:
          - fieldName: guild_id
  description: All member notes for the muted user

