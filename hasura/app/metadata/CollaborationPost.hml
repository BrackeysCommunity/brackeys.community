---
kind: ObjectType
version: v1
definition:
  name: CollaborationPost
  fields:
    - name: collaborationTypeId
      type: Int32!
    - name: createdAt
      type: Timestamp!
    - name: discordChannelId
      type: Int64
    - name: discordMessageId
      type: Int64
    - name: expiresAt
      type: Timestamp
    - name: guildId
      type: Int64!
    - name: hiringStatusId
      type: Int32!
    - name: id
      type: String_1!
    - name: isHighlighted
      type: Int8!
    - name: postedAt
      type: Timestamp
    - name: profileId
      type: String_1!
    - name: responseCount
      type: Int32!
    - name: statusId
      type: Int32!
    - name: tags
      type: String_1
    - name: updatedAt
      type: Timestamp!
    - name: viewCount
      type: Int32!
  graphql:
    typeName: CollaborationPost
    inputTypeName: CollaborationPostInput
  dataConnectorTypeMapping:
    - dataConnectorName: collab
      dataConnectorObjectType: CollaborationPost
      fieldMapping:
        collaborationTypeId:
          column:
            name: CollaborationTypeId
        createdAt:
          column:
            name: CreatedAt
        discordChannelId:
          column:
            name: DiscordChannelId
        discordMessageId:
          column:
            name: DiscordMessageId
        expiresAt:
          column:
            name: ExpiresAt
        guildId:
          column:
            name: GuildId
        hiringStatusId:
          column:
            name: HiringStatusId
        id:
          column:
            name: Id
        isHighlighted:
          column:
            name: IsHighlighted
        postedAt:
          column:
            name: PostedAt
        profileId:
          column:
            name: ProfileId
        responseCount:
          column:
            name: ResponseCount
        statusId:
          column:
            name: StatusId
        tags:
          column:
            name: Tags
        updatedAt:
          column:
            name: UpdatedAt
        viewCount:
          column:
            name: ViewCount

---
kind: TypePermissions
version: v1
definition:
  typeName: CollaborationPost
  permissions:
    - role: admin
      output:
        allowedFields:
          - collaborationTypeId
          - createdAt
          - discordChannelId
          - discordMessageId
          - expiresAt
          - guildId
          - hiringStatusId
          - id
          - isHighlighted
          - postedAt
          - profileId
          - responseCount
          - statusId
          - tags
          - updatedAt
          - viewCount

---
kind: BooleanExpressionType
version: v1
definition:
  name: CollaborationPostBoolExp
  operand:
    object:
      type: CollaborationPost
      comparableFields:
        - fieldName: collaborationTypeId
          booleanExpressionType: Int32BoolExp
        - fieldName: createdAt
          booleanExpressionType: TimestampBoolExp
        - fieldName: discordChannelId
          booleanExpressionType: Int64BoolExp
        - fieldName: discordMessageId
          booleanExpressionType: Int64BoolExp
        - fieldName: expiresAt
          booleanExpressionType: TimestampBoolExp
        - fieldName: guildId
          booleanExpressionType: Int64BoolExp
        - fieldName: hiringStatusId
          booleanExpressionType: Int32BoolExp
        - fieldName: id
          booleanExpressionType: StringBoolExp
        - fieldName: isHighlighted
          booleanExpressionType: Int8BoolExp
        - fieldName: postedAt
          booleanExpressionType: TimestampBoolExp
        - fieldName: profileId
          booleanExpressionType: StringBoolExp
        - fieldName: responseCount
          booleanExpressionType: Int32BoolExp
        - fieldName: statusId
          booleanExpressionType: Int32BoolExp
        - fieldName: tags
          booleanExpressionType: StringBoolExp
        - fieldName: updatedAt
          booleanExpressionType: TimestampBoolExp
        - fieldName: viewCount
          booleanExpressionType: Int32BoolExp
      comparableRelationships:
        - relationshipName: collaborationBookmarks
        - relationshipName: collaborationAuditLogs
        - relationshipName: collaborationFieldValues
        - relationshipName: collaborationProfile
        - relationshipName: collaborationType
        - relationshipName: hiringStatus
        - relationshipName: collaborationStatus
        - relationshipName: collaborationReports
        - relationshipName: collaborationResponses
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: CollaborationPostBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: CollaborationPostAggExp
  operand:
    object:
      aggregatedType: CollaborationPost
      aggregatableFields:
        - fieldName: collaborationTypeId
          aggregateExpression: Int32AggExp
        - fieldName: createdAt
          aggregateExpression: TimestampAggExp
        - fieldName: discordChannelId
          aggregateExpression: Int64AggExp
        - fieldName: discordMessageId
          aggregateExpression: Int64AggExp
        - fieldName: expiresAt
          aggregateExpression: TimestampAggExp
        - fieldName: guildId
          aggregateExpression: Int64AggExp
        - fieldName: hiringStatusId
          aggregateExpression: Int32AggExp
        - fieldName: id
          aggregateExpression: StringAggExp
        - fieldName: isHighlighted
          aggregateExpression: Int8AggExp
        - fieldName: postedAt
          aggregateExpression: TimestampAggExp
        - fieldName: profileId
          aggregateExpression: StringAggExp
        - fieldName: responseCount
          aggregateExpression: Int32AggExp
        - fieldName: statusId
          aggregateExpression: Int32AggExp
        - fieldName: tags
          aggregateExpression: StringAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestampAggExp
        - fieldName: viewCount
          aggregateExpression: Int32AggExp
  count:
    enable: true
  graphql:
    selectTypeName: CollaborationPostAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: CollaborationPostOrderByExp
  operand:
    object:
      orderedType: CollaborationPost
      orderableFields:
        - fieldName: collaborationTypeId
          orderByExpression: Int32OrderByExp
        - fieldName: createdAt
          orderByExpression: TimestampOrderByExp
        - fieldName: discordChannelId
          orderByExpression: Int64OrderByExp
        - fieldName: discordMessageId
          orderByExpression: Int64OrderByExp
        - fieldName: expiresAt
          orderByExpression: TimestampOrderByExp
        - fieldName: guildId
          orderByExpression: Int64OrderByExp
        - fieldName: hiringStatusId
          orderByExpression: Int32OrderByExp
        - fieldName: id
          orderByExpression: String1OrderByExp
        - fieldName: isHighlighted
          orderByExpression: Int8OrderByExp
        - fieldName: postedAt
          orderByExpression: TimestampOrderByExp
        - fieldName: profileId
          orderByExpression: String1OrderByExp
        - fieldName: responseCount
          orderByExpression: Int32OrderByExp
        - fieldName: statusId
          orderByExpression: Int32OrderByExp
        - fieldName: tags
          orderByExpression: String1OrderByExp
        - fieldName: updatedAt
          orderByExpression: TimestampOrderByExp
        - fieldName: viewCount
          orderByExpression: Int32OrderByExp
      orderableRelationships:
        - relationshipName: collaborationProfile
        - relationshipName: collaborationType
        - relationshipName: hiringStatus
        - relationshipName: collaborationStatus
  graphql:
    expressionTypeName: CollaborationPostOrderByExp

---
kind: Model
version: v2
definition:
  name: CollaborationPost
  objectType: CollaborationPost
  source:
    dataConnectorName: collab
    collection: CollaborationPost
  filterExpressionType: CollaborationPostBoolExp
  aggregateExpression: CollaborationPostAggExp
  orderByExpression: CollaborationPostOrderByExp
  graphql:
    selectMany:
      queryRootField: collaborationPost
      subscription:
        rootField: collaborationPost
    selectUniques:
      - queryRootField: collaborationPostById
        uniqueIdentifier:
          - id
        subscription:
          rootField: collaborationPostById
    filterInputTypeName: CollaborationPostFilterInput
    aggregate:
      queryRootField: collaborationPostAggregate
      subscription:
        rootField: collaborationPostAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: CollaborationPost
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: collaborationBookmarks
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationBookmark
      relationshipType: Array
      aggregate:
        aggregateExpression: CollaborationBookmarkAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: collaborationPostId
  graphql:
    aggregateFieldName: collaborationBookmarksAggregate

---
kind: Relationship
version: v1
definition:
  name: collaborationAuditLogs
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationAuditLog
      relationshipType: Array
      aggregate:
        aggregateExpression: CollaborationAuditLogAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: collaborationPostId
  graphql:
    aggregateFieldName: collaborationAuditLogsAggregate

---
kind: Relationship
version: v1
definition:
  name: collaborationFieldValues
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationFieldValue
      relationshipType: Array
      aggregate:
        aggregateExpression: CollaborationFieldValueAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: collaborationPostId
  graphql:
    aggregateFieldName: collaborationFieldValuesAggregate

---
kind: Relationship
version: v1
definition:
  name: collaborationProfile
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationProfile
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: profileId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collaborationType
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationType
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: collaborationTypeId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: hiringStatus
  sourceType: CollaborationPost
  target:
    model:
      name: HiringStatus
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: hiringStatusId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collaborationStatus
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationStatus
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: statusId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collaborationReports
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationReport
      relationshipType: Array
      aggregate:
        aggregateExpression: CollaborationReportAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: collaborationPostId
  graphql:
    aggregateFieldName: collaborationReportsAggregate

---
kind: Relationship
version: v1
definition:
  name: collaborationResponses
  sourceType: CollaborationPost
  target:
    model:
      name: CollaborationResponse
      relationshipType: Array
      aggregate:
        aggregateExpression: CollaborationResponseAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: collaborationPostId
  graphql:
    aggregateFieldName: collaborationResponsesAggregate

