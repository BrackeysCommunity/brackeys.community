---
kind: ObjectType
version: v1
definition:
  name: UsersUserRole
  fields:
    - name: createdAt
      type: Timestamptz!
    - name: id
      type: String_1!
    - name: role
      type: String_1!
    - name: userId
      type: String_1!
  graphql:
    typeName: UsersUserRole
    inputTypeName: UsersUserRoleInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: users.user_role
      fieldMapping:
        createdAt:
          column:
            name: created_at
        id:
          column:
            name: id
        role:
          column:
            name: role
        userId:
          column:
            name: user_id

---
kind: TypePermissions
version: v1
definition:
  typeName: UsersUserRole
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - id
          - role
          - userId

---
kind: BooleanExpressionType
version: v1
definition:
  name: UsersUserRoleBoolExp
  operand:
    object:
      type: UsersUserRole
      comparableFields:
        - fieldName: createdAt
          booleanExpressionType: TimestampWithTimeZoneBoolExp
        - fieldName: id
          booleanExpressionType: UuidBoolExp
        - fieldName: role
          booleanExpressionType: TextBoolExp
        - fieldName: userId
          booleanExpressionType: UuidBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: UsersUserRoleBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: UsersUserRoleAggExp
  operand:
    object:
      aggregatedType: UsersUserRole
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestampWithTimeZoneAggExp
        - fieldName: id
          aggregateExpression: UuidAggExp
        - fieldName: role
          aggregateExpression: TextAggExp
        - fieldName: userId
          aggregateExpression: UuidAggExp
  count:
    enable: true
  graphql:
    selectTypeName: UsersUserRoleAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: UsersUserRoleOrderByExp
  operand:
    object:
      orderedType: UsersUserRole
      orderableFields:
        - fieldName: createdAt
          orderByExpression: TimestamptzOrderByExp
        - fieldName: id
          orderByExpression: String1OrderByExp
        - fieldName: role
          orderByExpression: String1OrderByExp
        - fieldName: userId
          orderByExpression: String1OrderByExp
      orderableRelationships:
        - relationshipName: usersUser
  graphql:
    expressionTypeName: UsersUserRoleOrderByExp

---
kind: Model
version: v2
definition:
  name: UsersUserRole
  objectType: UsersUserRole
  source:
    dataConnectorName: postgres
    collection: users.user_role
  filterExpressionType: UsersUserRoleBoolExp
  aggregateExpression: UsersUserRoleAggExp
  orderByExpression: UsersUserRoleOrderByExp
  graphql:
    selectMany:
      queryRootField: usersUserRole
      subscription:
        rootField: usersUserRole
    selectUniques:
      - queryRootField: usersUserRoleById
        uniqueIdentifier:
          - id
        subscription:
          rootField: usersUserRoleById
    filterInputTypeName: UsersUserRoleFilterInput
    aggregate:
      queryRootField: usersUserRoleAggregate
      subscription:
        rootField: usersUserRoleAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: UsersUserRole
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: usersUser
  sourceType: UsersUserRole
  target:
    model:
      name: UsersUser
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: userId
      target:
        modelField:
          - fieldName: id

