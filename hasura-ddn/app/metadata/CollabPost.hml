---
kind: ObjectType
version: v1
definition:
  name: CollabPost
  fields:
    - name: createdAt
      type: Timestamp!
    - name: deletedAt
      type: Timestamp
    - name: discordChannelId
      type: Int64
    - name: discordMessageId
      type: Int64
    - name: expiresAt
      type: Timestamp
    - name: guildId
      type: Int64!
    - name: hiringStatusId
      type: Int32!
    - name: id
      type: String_1!
    - name: isDeleted
      type: Boolean_1
    - name: isHighlighted
      type: Boolean_1!
    - name: postedAt
      type: Timestamp
    - name: profileId
      type: String_1!
    - name: responseCount
      type: Int32!
    - name: statusId
      type: Int32!
    - name: tags
      type: String_1
    - name: typeId
      type: Int32!
    - name: updatedAt
      type: Timestamp!
    - name: viewCount
      type: Int32!
  graphql:
    typeName: CollabPost
    inputTypeName: CollabPostInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: collab.post
      fieldMapping:
        createdAt:
          column:
            name: created_at
        deletedAt:
          column:
            name: deleted_at
        discordChannelId:
          column:
            name: discord_channel_id
        discordMessageId:
          column:
            name: discord_message_id
        expiresAt:
          column:
            name: expires_at
        guildId:
          column:
            name: guild_id
        hiringStatusId:
          column:
            name: hiring_status_id
        id:
          column:
            name: id
        isDeleted:
          column:
            name: is_deleted
        isHighlighted:
          column:
            name: is_highlighted
        postedAt:
          column:
            name: posted_at
        profileId:
          column:
            name: profile_id
        responseCount:
          column:
            name: response_count
        statusId:
          column:
            name: status_id
        tags:
          column:
            name: tags
        typeId:
          column:
            name: type_id
        updatedAt:
          column:
            name: updated_at
        viewCount:
          column:
            name: view_count

---
kind: TypePermissions
version: v1
definition:
  typeName: CollabPost
  permissions:
    - role: admin
      output:
        allowedFields:
          - createdAt
          - deletedAt
          - discordChannelId
          - discordMessageId
          - expiresAt
          - guildId
          - hiringStatusId
          - id
          - isDeleted
          - isHighlighted
          - postedAt
          - profileId
          - responseCount
          - statusId
          - tags
          - typeId
          - updatedAt
          - viewCount

---
kind: BooleanExpressionType
version: v1
definition:
  name: CollabPostBoolExp
  operand:
    object:
      type: CollabPost
      comparableFields:
        - fieldName: createdAt
          booleanExpressionType: TimestampWithoutTimeZoneBoolExp
        - fieldName: deletedAt
          booleanExpressionType: TimestampWithoutTimeZoneBoolExp
        - fieldName: discordChannelId
          booleanExpressionType: BigintBoolExp
        - fieldName: discordMessageId
          booleanExpressionType: BigintBoolExp
        - fieldName: expiresAt
          booleanExpressionType: TimestampWithoutTimeZoneBoolExp
        - fieldName: guildId
          booleanExpressionType: BigintBoolExp
        - fieldName: hiringStatusId
          booleanExpressionType: IntegerBoolExp
        - fieldName: id
          booleanExpressionType: UuidBoolExp
        - fieldName: isDeleted
          booleanExpressionType: BooleanBoolExp
        - fieldName: isHighlighted
          booleanExpressionType: BooleanBoolExp
        - fieldName: postedAt
          booleanExpressionType: TimestampWithoutTimeZoneBoolExp
        - fieldName: profileId
          booleanExpressionType: UuidBoolExp
        - fieldName: responseCount
          booleanExpressionType: IntegerBoolExp
        - fieldName: statusId
          booleanExpressionType: IntegerBoolExp
        - fieldName: tags
          booleanExpressionType: JsonbBoolExp
        - fieldName: typeId
          booleanExpressionType: IntegerBoolExp
        - fieldName: updatedAt
          booleanExpressionType: TimestampWithoutTimeZoneBoolExp
        - fieldName: viewCount
          booleanExpressionType: IntegerBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: CollabPostBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: CollabPostAggExp
  operand:
    object:
      aggregatedType: CollabPost
      aggregatableFields:
        - fieldName: createdAt
          aggregateExpression: TimestampWithoutTimeZoneAggExp
        - fieldName: deletedAt
          aggregateExpression: TimestampWithoutTimeZoneAggExp
        - fieldName: discordChannelId
          aggregateExpression: BigintAggExp
        - fieldName: discordMessageId
          aggregateExpression: BigintAggExp
        - fieldName: expiresAt
          aggregateExpression: TimestampWithoutTimeZoneAggExp
        - fieldName: guildId
          aggregateExpression: BigintAggExp
        - fieldName: hiringStatusId
          aggregateExpression: IntegerAggExp
        - fieldName: id
          aggregateExpression: UuidAggExp
        - fieldName: isDeleted
          aggregateExpression: BooleanAggExp
        - fieldName: isHighlighted
          aggregateExpression: BooleanAggExp
        - fieldName: postedAt
          aggregateExpression: TimestampWithoutTimeZoneAggExp
        - fieldName: profileId
          aggregateExpression: UuidAggExp
        - fieldName: responseCount
          aggregateExpression: IntegerAggExp
        - fieldName: statusId
          aggregateExpression: IntegerAggExp
        - fieldName: tags
          aggregateExpression: JsonbAggExp
        - fieldName: typeId
          aggregateExpression: IntegerAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestampWithoutTimeZoneAggExp
        - fieldName: viewCount
          aggregateExpression: IntegerAggExp
  count:
    enable: true
  graphql:
    selectTypeName: CollabPostAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: CollabPostOrderByExp
  operand:
    object:
      orderedType: CollabPost
      orderableFields:
        - fieldName: createdAt
          orderByExpression: TimestampOrderByExp
        - fieldName: deletedAt
          orderByExpression: TimestampOrderByExp
        - fieldName: discordChannelId
          orderByExpression: Int64OrderByExp
        - fieldName: discordMessageId
          orderByExpression: Int64OrderByExp
        - fieldName: expiresAt
          orderByExpression: TimestampOrderByExp
        - fieldName: guildId
          orderByExpression: Int64OrderByExp
        - fieldName: hiringStatusId
          orderByExpression: Int32OrderByExp
        - fieldName: id
          orderByExpression: String1OrderByExp
        - fieldName: isDeleted
          orderByExpression: Boolean1OrderByExp
        - fieldName: isHighlighted
          orderByExpression: Boolean1OrderByExp
        - fieldName: postedAt
          orderByExpression: TimestampOrderByExp
        - fieldName: profileId
          orderByExpression: String1OrderByExp
        - fieldName: responseCount
          orderByExpression: Int32OrderByExp
        - fieldName: statusId
          orderByExpression: Int32OrderByExp
        - fieldName: tags
          orderByExpression: String1OrderByExp
        - fieldName: typeId
          orderByExpression: Int32OrderByExp
        - fieldName: updatedAt
          orderByExpression: TimestampOrderByExp
        - fieldName: viewCount
          orderByExpression: Int32OrderByExp
      orderableRelationships:
        - relationshipName: collabHiringStatus
        - relationshipName: collabProfile
        - relationshipName: collabStatus
        - relationshipName: collabType
  graphql:
    expressionTypeName: CollabPostOrderByExp

---
kind: Model
version: v2
definition:
  name: CollabPost
  objectType: CollabPost
  source:
    dataConnectorName: postgres
    collection: collab.post
  filterExpressionType: CollabPostBoolExp
  aggregateExpression: CollabPostAggExp
  orderByExpression: CollabPostOrderByExp
  graphql:
    selectMany:
      queryRootField: collabPost
      subscription:
        rootField: collabPost
    selectUniques:
      - queryRootField: collabPostById
        uniqueIdentifier:
          - id
        subscription:
          rootField: collabPostById
    filterInputTypeName: CollabPostFilterInput
    aggregate:
      queryRootField: collabPostAggregate
      subscription:
        rootField: collabPostAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: CollabPost
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: collabAuditLogs
  sourceType: CollabPost
  target:
    model:
      name: CollabAuditLog
      relationshipType: Array
      aggregate:
        aggregateExpression: CollabAuditLogAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: postId
  graphql:
    aggregateFieldName: collabAuditLogsAggregate

---
kind: Relationship
version: v1
definition:
  name: collabBookmarks
  sourceType: CollabPost
  target:
    model:
      name: CollabBookmark
      relationshipType: Array
      aggregate:
        aggregateExpression: CollabBookmarkAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: postId
  graphql:
    aggregateFieldName: collabBookmarksAggregate

---
kind: Relationship
version: v1
definition:
  name: collabFieldValues
  sourceType: CollabPost
  target:
    model:
      name: CollabFieldValue
      relationshipType: Array
      aggregate:
        aggregateExpression: CollabFieldValueAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: postId
  graphql:
    aggregateFieldName: collabFieldValuesAggregate

---
kind: Relationship
version: v1
definition:
  name: collabHiringStatus
  sourceType: CollabPost
  target:
    model:
      name: CollabHiringStatus
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: hiringStatusId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collabProfile
  sourceType: CollabPost
  target:
    model:
      name: CollabProfile
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: profileId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collabStatus
  sourceType: CollabPost
  target:
    model:
      name: CollabStatus
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: statusId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collabType
  sourceType: CollabPost
  target:
    model:
      name: CollabType
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: typeId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: collabReports
  sourceType: CollabPost
  target:
    model:
      name: CollabReport
      relationshipType: Array
      aggregate:
        aggregateExpression: CollabReportAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: postId
  graphql:
    aggregateFieldName: collabReportsAggregate

---
kind: Relationship
version: v1
definition:
  name: collabResponses
  sourceType: CollabPost
  target:
    model:
      name: CollabResponse
      relationshipType: Array
      aggregate:
        aggregateExpression: CollabResponseAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: postId
  graphql:
    aggregateFieldName: collabResponsesAggregate

