---
kind: ObjectType
version: v1
definition:
  name: UsersUser
  fields:
    - name: avatarUrl
      type: String_1
    - name: createdAt
      type: Timestamptz!
    - name: discordId
      type: String_1
    - name: displayName
      type: String_1
    - name: email
      type: String_1!
    - name: id
      type: String_1!
    - name: oryIdentityId
      type: String_1!
    - name: updatedAt
      type: Timestamptz!
    - name: username
      type: String_1
  graphql:
    typeName: UsersUser
    inputTypeName: UsersUserInput
  dataConnectorTypeMapping:
    - dataConnectorName: postgres
      dataConnectorObjectType: users.user
      fieldMapping:
        avatarUrl:
          column:
            name: avatar_url
        createdAt:
          column:
            name: created_at
        discordId:
          column:
            name: discord_id
        displayName:
          column:
            name: display_name
        email:
          column:
            name: email
        id:
          column:
            name: id
        oryIdentityId:
          column:
            name: ory_identity_id
        updatedAt:
          column:
            name: updated_at
        username:
          column:
            name: username

---
kind: TypePermissions
version: v1
definition:
  typeName: UsersUser
  permissions:
    - role: admin
      output:
        allowedFields:
          - avatarUrl
          - createdAt
          - discordId
          - displayName
          - email
          - id
          - oryIdentityId
          - updatedAt
          - username

---
kind: BooleanExpressionType
version: v1
definition:
  name: UsersUserBoolExp
  operand:
    object:
      type: UsersUser
      comparableFields:
        - fieldName: avatarUrl
          booleanExpressionType: TextBoolExp
        - fieldName: createdAt
          booleanExpressionType: TimestampWithTimeZoneBoolExp
        - fieldName: discordId
          booleanExpressionType: TextBoolExp
        - fieldName: displayName
          booleanExpressionType: TextBoolExp
        - fieldName: email
          booleanExpressionType: TextBoolExp
        - fieldName: id
          booleanExpressionType: UuidBoolExp
        - fieldName: oryIdentityId
          booleanExpressionType: UuidBoolExp
        - fieldName: updatedAt
          booleanExpressionType: TimestampWithTimeZoneBoolExp
        - fieldName: username
          booleanExpressionType: TextBoolExp
      comparableRelationships: []
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: UsersUserBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: UsersUserAggExp
  operand:
    object:
      aggregatedType: UsersUser
      aggregatableFields:
        - fieldName: avatarUrl
          aggregateExpression: TextAggExp
        - fieldName: createdAt
          aggregateExpression: TimestampWithTimeZoneAggExp
        - fieldName: discordId
          aggregateExpression: TextAggExp
        - fieldName: displayName
          aggregateExpression: TextAggExp
        - fieldName: email
          aggregateExpression: TextAggExp
        - fieldName: id
          aggregateExpression: UuidAggExp
        - fieldName: oryIdentityId
          aggregateExpression: UuidAggExp
        - fieldName: updatedAt
          aggregateExpression: TimestampWithTimeZoneAggExp
        - fieldName: username
          aggregateExpression: TextAggExp
  count:
    enable: true
  graphql:
    selectTypeName: UsersUserAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: UsersUserOrderByExp
  operand:
    object:
      orderedType: UsersUser
      orderableFields:
        - fieldName: avatarUrl
          orderByExpression: String1OrderByExp
        - fieldName: createdAt
          orderByExpression: TimestamptzOrderByExp
        - fieldName: discordId
          orderByExpression: String1OrderByExp
        - fieldName: displayName
          orderByExpression: String1OrderByExp
        - fieldName: email
          orderByExpression: String1OrderByExp
        - fieldName: id
          orderByExpression: String1OrderByExp
        - fieldName: oryIdentityId
          orderByExpression: String1OrderByExp
        - fieldName: updatedAt
          orderByExpression: TimestamptzOrderByExp
        - fieldName: username
          orderByExpression: String1OrderByExp
      orderableRelationships: []
  graphql:
    expressionTypeName: UsersUserOrderByExp

---
kind: Model
version: v2
definition:
  name: UsersUser
  objectType: UsersUser
  source:
    dataConnectorName: postgres
    collection: users.user
  filterExpressionType: UsersUserBoolExp
  aggregateExpression: UsersUserAggExp
  orderByExpression: UsersUserOrderByExp
  graphql:
    selectMany:
      queryRootField: usersUser
      subscription:
        rootField: usersUser
    selectUniques:
      - queryRootField: usersUserById
        uniqueIdentifier:
          - id
        subscription:
          rootField: usersUserById
    filterInputTypeName: UsersUserFilterInput
    aggregate:
      queryRootField: usersUserAggregate
      subscription:
        rootField: usersUserAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: UsersUser
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: usersUserRoles
  sourceType: UsersUser
  target:
    model:
      name: UsersUserRole
      relationshipType: Array
      aggregate:
        aggregateExpression: UsersUserRoleAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: userId
  graphql:
    aggregateFieldName: usersUserRolesAggregate

